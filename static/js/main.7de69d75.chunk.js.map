{"version":3,"sources":["store/reducer.js","store/constants.js","store/index.js","components/Modal/index.js","components/Calendar/index.js","store/actions.js","App.js","index.js"],"names":["thisMonth","Date","getMonth","initialState","events","id","title","start","end","modalEvent","desc","reducer","combineReducers","calendar","state","action","type","payload","slice","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactModal","modalCustomStyles","content","top","left","right","bottom","marginRight","transform","width","height","overflow","DatePick","props","required","dateFormat","showTimeSelect","timeCaption","timeFormat","timeIntervals","showMonthDropdown","showWeekNumbers","shouldCloseOnSelect","popperModifiers","offset","enabled","Modal","setModalEvent","modal","isNewEvent","handleEventSave","handleEventDelete","closeModal","isOpen","style","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","onSubmit","e","preventDefault","alert","className","value","onChange","target","placeholder","autoFocus","selected","startDate","endDate","descr","onClick","localizer","momentLocalizer","moment","formats","timeGutterFormat","agendaTimeFormat","agendaHeaderFormat","culture","local","format","dayHeaderFormat","DragAndDropCalendar","withDragAndDrop","Calendar","MyCalendar","connect","setNewEvent","setUpdatedEvent","setResizedEvent","setEvents","clearModalEvent","deleteEvent","useState","setModal","setIsNewEvent","openModal","event","now","defaultDate","defaultView","min","max","step","showMultiDayTimes","selectable","resizable","popup","onSelectEvent","onSelectSlot","slots","length","onEventDrop","index","indexOf","updatedEvent","nextEvents","splice","onEventResize","map","existingEvent","eventPropGetter","eventStartDate","getDate","eventStartMonth","currentDate","currentMonth","backgroundColor","bgColor","saveElem","findItemIndex","findIndex","item","updatedEvents","deleteElem","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7de69d75.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport * as action_type from './constants.js';\n// state for start\n\nconst thisMonth = new Date().getMonth();\nconst initialState = {\n  events: [\n    {\n      id: 1,\n      title: 'All Day Event very long title',\n      // allDay: true,\n      start: new Date(2020, thisMonth, 27, 0),\n      end: new Date(2020, thisMonth, 27, 20),\n    }\n  ],\n  modalEvent: {\n    title: '',\n    start: null,\n    end: null,\n    desc: '',\n    id: null\n  }\n};\n\nfunction calendarReducer(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case action_type.SET_MODAL_EVENT:\n      return {\n        ...state,\n        modalEvent: payload\n      };\n\n    case action_type.SET_EVENTS:\n      return {\n        ...state,\n        events: payload\n      };\n\n    case action_type.SET_NEW_EVENT:\n      return {\n        ...state,\n        events: [...state.events, payload]\n      };\n\n      case action_type.SET_UPDATED_EVENT:\n      return {\n        ...state,\n        events: payload\n      };\n\n      case action_type.SET_RESIZED_EVENT:\n      return {\n        ...state,\n        events: payload\n      };\n\n    case action_type.DELETE_EVENT:\n      return {\n        ...state,\n        events: [\n          ...state.events.slice(0, payload),\n          ...state.events.slice(payload + 1)\n        ]\n      };\n\n    case action_type.CLEAR_MODAL_EVENT:\n      return {\n        ...state,\n        modalEvent: {\n          title: '',\n          start: null,\n          end: null,\n          desc: '',\n          id: null\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const reducer = combineReducers({\n  calendar: calendarReducer,\n});","export const SET_MODAL_EVENT = 'SET_MODAL_EVENT';\nexport const SET_NEW_EVENT = 'SET_NEW_EVENT';\nexport const SET_UPDATED_EVENT = 'SET_UPDATED_EVENT';\nexport const SET_RESIZED_EVENT = 'SET_RESIZED_EVENT';\nexport const SET_EVENTS = 'SET_EVENTS';\nexport const CLEAR_MODAL_EVENT = 'CLEAR_MODAL_EVENT';\nexport const DELETE_EVENT = 'DELETE_EVENT';","import { createStore } from 'redux';\nimport {reducer} from './reducer';\n\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store\nexport * from './actions'","import React from 'react';\nimport * as ReactModal from 'react-modal';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './index.css';\n\n\nReactModal.setAppElement('#root');\n\nconst modalCustomStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '50vw',\n    height: '55vh',\n    overflow: 'visible'\n  }\n};\n\nconst DatePick = (props) => {\n  return (\n    <DatePicker\n      {...props}\n      required={true}\n      dateFormat=\"dd/MM/yyyy HH:mm\"\n      showTimeSelect={true}\n      timeCaption=\"Time\"\n      timeFormat=\"HH:mm\"\n      timeIntervals={30}\n      showMonthDropdown={true}\n      showWeekNumbers={true}\n      shouldCloseOnSelect={true}\n      popperModifiers={{\n        offset: {\n          enabled: true,\n          offset: '-40px, 0px'\n        }\n      }}\n    />\n  )\n};\n\nexport const Modal = (props) => {\n  const {setModalEvent, modal, isNewEvent, handleEventSave, handleEventDelete, modalEvent, closeModal} = props;\n  const {title, start, end, desc} = modalEvent;\n\n  const handleTitleChange = (e) => {\n    const title = e.target.value;\n    setModalEvent({\n      ...modalEvent,\n      title:  title\n    });\n  };\n\n  const handleStartDateChange = (startDate) => {\n    setModalEvent({\n      ...modalEvent,\n      start:  startDate\n    });\n  };\n\n  const handleEndDateChange = (endDate) => {\n    setModalEvent({\n      ...modalEvent,\n      end: endDate\n    });\n  };\n\n  const handleDescChange = (e) => {\n    const descr = e.target.value;\n    setModalEvent({\n      ...modalEvent,\n      desc: descr\n    });\n  };\n\n  const handleSubmitButton = (e) => {\n    e.preventDefault();\n    if (start > end) {\n      return alert(`Error, time paradox!!!\\nEvent end date can not be earlier than event start date!`);\n    }\n    handleEventSave(modalEvent);\n    closeModal();\n  };\n\n  return (\n    <ReactModal\n      isOpen={modal}\n      style={modalCustomStyles}\n      shouldCloseOnOverlayClick={true}\n      onRequestClose={closeModal}\n      closeTimeoutMS={200}\n    >\n      <form onSubmit={handleSubmitButton} className=\"form-wrapper\">\n        <div className=\"input-flex\">\n          <label>\n            Event title\n          </label>\n            <input type=\"text\" value={title || \"\"} onChange={handleTitleChange} placeholder=\"No title\" required autoFocus />\n        </div>\n        <div className=\"input-flex\">\n          <label>\n            Event start\n          </label>\n            <DatePick\n              selected={start}\n              onChange={handleStartDateChange}\n            />\n        </div>\n        <div className=\"input-flex\">\n          <label>\n            Event end\n          </label>\n            <DatePick\n              selected={end}\n              onChange={handleEndDateChange}\n            />\n        </div>\n        <div>\n          <textarea value={desc} onChange={handleDescChange} placeholder=\"Event description\" />\n        </div>\n        <div className=\"modal-buttons\">\n          {!isNewEvent &&\n          <button type=\"button\" onClick={() => handleEventDelete(modalEvent)}>Delete event</button>}\n          <button type=\"button\" onClick={closeModal}>Cancel</button>\n          <button type=\"submit\">Save</button>\n        </div>\n      </form>\n    </ReactModal>\n  )\n};","import React, {useState, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport {\n  setModalEvent,\n  setNewEvent,\n  setUpdatedEvent,\n  setResizedEvent,\n  setEvents,\n  clearModalEvent,\n  deleteEvent\n} from '../../store'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\"\nimport moment from 'moment';\nimport {Modal} from '../Modal';\nimport './index.css';\n\nconst localizer = momentLocalizer(moment);\n\nconst formats = {\n  timeGutterFormat: 'H:mm',\n  agendaTimeFormat: 'H:mm',\n  agendaHeaderFormat: ({start, end}, culture, local) => (\n    `${local.format(start, \"MMMM D\")} — ${local.format(end, \"MMMM D\")}`),\n  dayHeaderFormat: 'dddd MMMM Do',\n};\n\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nconst mapStateToProps = state => ({\n  modalEvent: state.calendar.modalEvent,\n  events: state.calendar.events\n});\n\nexport const MyCalendar = connect(mapStateToProps, {\n  setModalEvent,\n  setNewEvent,\n  setUpdatedEvent,\n  setResizedEvent,\n  setEvents,\n  clearModalEvent,\n  deleteEvent\n})(props => {\n  const {\n    setModalEvent,\n    clearModalEvent,\n    deleteEvent,\n    setNewEvent,\n    setUpdatedEvent,\n    setResizedEvent,\n    setEvents,\n    modalEvent,\n    events\n  } = props;\n\n  const [modal, setModal] = useState(false);\n  const [isNewEvent, setIsNewEvent] = useState(false);\n\n  const moveEvent = ({event, start, end}) => {\n    const index = events.indexOf(event);\n    const updatedEvent = {...event, start, end};\n    const nextEvents = [...events];\n    nextEvents.splice(index, 1, updatedEvent);\n    setUpdatedEvent(nextEvents)\n  };\n\n  const resizeEvent = ({event, start, end}) => {\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? {...existingEvent, start, end}\n        : existingEvent\n    });\n    setResizedEvent(nextEvents)\n  };\n\n  const handleEventSave = (saveElem) => {\n    const findItemIndex = events.findIndex(item => item.id === saveElem.id);\n    if (findItemIndex > -1) {\n      const updatedEvents = events;\n      updatedEvents[findItemIndex] = saveElem;\n      return setEvents(updatedEvents);\n    }\n    setNewEvent(saveElem);\n  };\n\n  const handleEventDelete = (deleteElem) => {\n    const findIndex = events.findIndex(item => item.id === deleteElem.id);\n    return deleteEvent(findIndex);\n  };\n\n  const selectSlot = (event) => {\n    setIsNewEvent(true);\n    event.start = event.slots[0];\n    event.end = event.slots[event.slots.length - 1];\n    openModal(event)\n  };\n\n  const selectEvent = (event) => {\n    setIsNewEvent(false);\n    openModal(event);\n  };\n\n  const openModal = (event) => {\n    const id = event.id ? event.id : Date.now();\n    setModal(true);\n    setModalEvent({\n      ...event,\n      id\n    })\n  };\n\n  const closeModal = () => {\n    setModal(false);\n    clearModalEvent();\n  };\n\n  const getEventStyles = (event, start) => {\n    const style = {};\n    const eventStartDate = start.getDate();\n    const eventStartMonth = start.getMonth();\n\n    const currentDate = new Date().getDate();\n    const currentMonth = new Date().getMonth();\n\n    if (eventStartDate === currentDate && eventStartMonth === currentMonth) {\n      style.backgroundColor = 'green';\n    } else if (eventStartDate < currentDate) {\n      if (eventStartMonth <= currentMonth) {\n        style.backgroundColor = 'red';\n      } else {\n        style.backgroundColor = 'blue';\n      }\n    } else if (eventStartDate > currentDate) {\n      if (eventStartMonth < currentMonth) {\n        style.backgroundColor = 'red';\n      } else {\n        style.backgroundColor = 'blue';\n      }\n    }\n    if (event.bgColor) {\n      style.backgroundColor = event.bgColor;\n    }\n    return {style};\n  };\n\n  return (\n    events &&\n    <Fragment>\n      <DragAndDropCalendar style={{height: 700}}\n                           localizer={localizer}\n                           formats={formats}\n                           events={events}\n                           defaultDate={new Date()}\n                           defaultView={'month'}\n                           min={new Date(0, 0, 0, 10, 0, 0)}\n                           max={new Date(0, 0, 0, 22, 0, 0)}\n                           step={60}\n                           showMultiDayTimes={true}\n                           selectable\n                           resizable\n                           popup\n                           onSelectEvent={selectEvent}\n                           onSelectSlot={selectSlot}\n                           onEventDrop={moveEvent}\n                           onEventResize={resizeEvent}\n                           eventPropGetter={getEventStyles}\n      />\n      <Modal\n        modal={modal}\n        setModalEvent={setModalEvent}\n        modalEvent={modalEvent}\n        handleEventSave={handleEventSave}\n        handleEventDelete={handleEventDelete}\n        closeModal={closeModal}\n        isNewEvent={isNewEvent}\n      />\n    </Fragment>\n  )\n});","import * as action_type from './constants.js';\n\nexport const setModalEvent = (payload) => ({\n  type: action_type.SET_MODAL_EVENT,\n  payload\n});\n\nexport const setNewEvent = (payload) => ({\n  type: action_type.SET_NEW_EVENT,\n  payload\n});\n\nexport const setUpdatedEvent = (payload) => ({\n  type: action_type.SET_UPDATED_EVENT,\n  payload\n});\n\nexport const setResizedEvent = (payload) => ({\n  type: action_type.SET_RESIZED_EVENT,\n  payload\n});\n\nexport const setEvents = (payload) => ({\n  type: action_type.SET_EVENTS,\n  payload\n});\n\nexport const clearModalEvent = () => ({\n  type: action_type.CLEAR_MODAL_EVENT\n});\n\nexport const deleteEvent = (payload) => ({\n  type: action_type.DELETE_EVENT,\n  payload\n});","import React from 'react';\n\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nimport {MyCalendar} from \"./components/Calendar\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <MyCalendar />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}